import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;
import org.eclipse.jetty.websocket.client.ClientUpgradeRequest;
import org.eclipse.jetty.websocket.client.WebSocketClient;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.net.URI;
import java.util.concurrent.TimeUnit;

public class frmMain {
    private JPanel mainPanel;
    private JTabbedPane tabbedPane1;
    private JTextField txUri;
    private JPanel txData;
    private JTextField txData2;
    private JButton btnInit;
    private JButton btnConnect;
    private JButton btnDisconnect;
    private JButton btnSendData;
    private JList<String> lbLog;
    private JButton btnClearLog;
    private JButton btnRefreshLog;

    private DefaultListModel<String> dlmLog = new DefaultListModel<>();
    //private WebsocketClientEndpoint clientEndPoint;


    private WebSocketClient client;
    private SimpleEchoSocket socket;

    /**
     *
     */
    public frmMain() {
        MyInit();
        btnClearLog.addActionListener(e -> dlmLog.clear());
        btnInit.addActionListener(e -> InitSocket());
        btnDisconnect.addActionListener(e -> Disconnect());
        btnSendData.addActionListener(e -> SendData());
        btnRefreshLog.addActionListener(e -> refreshLog());
    }

    /**
     *
     */
    private void refreshLog() {
        dlmLog.addElement(" ");
        dlmLog.remove(dlmLog.getSize() - 1);
    }

    /**
     *
     */
    private void SendData() {
        socket.send(txData2.getText());
    }

    /**
     *
     */
    private void Disconnect() {
        try {
            client.stop();
        } catch (Exception ex) {
            Tools.LogException(ex, dlmLog);
        }
    }

    /**
     *
     */
    private void InitSocket() {

        client = new WebSocketClient();
        socket = new SimpleEchoSocket(dlmLog);
        try {
            client.start();

            URI echoUri = new URI(txUri.getText());
            ClientUpgradeRequest request = new ClientUpgradeRequest();
            client.connect(socket, echoUri, request);
            dlmLog.addElement(String.format("************** Connecting to : %s%n ********************", echoUri));
        } catch (Exception ex) {
            Tools.LogException(ex, dlmLog);
        }
    }

    /**
     *
     */
    private void MyInit() {

        lbLog.setModel(dlmLog);

        dlmLog.addElement("init completed .....");
    }

    /**
     * @param args
     */
    public static void main(String[] args) {
        JFrame frame = new JFrame("*** WebSocket Connection Test ***");
        frame.setContentPane(new frmMain().mainPanel);
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.pack();
        frame.setVisible(true);
        frame.setSize(1200, 800);
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        mainPanel = new JPanel();
        mainPanel.setLayout(new GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        tabbedPane1 = new JTabbedPane();
        mainPanel.add(tabbedPane1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, new Dimension(200, 200), null, 0, false));
        txData = new JPanel();
        txData.setLayout(new GridLayoutManager(5, 5, new Insets(0, 0, 0, 0), -1, -1));
        tabbedPane1.addTab("Main", txData);
        final JLabel label1 = new JLabel();
        Font label1Font = this.$$$getFont$$$(null, Font.BOLD, 12, label1.getFont());
        if (label1Font != null) label1.setFont(label1Font);
        label1.setText("URI:");
        txData.add(label1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final Spacer spacer1 = new Spacer();
        txData.add(spacer1, new GridConstraints(4, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        txUri = new JTextField();
        Font txUriFont = this.$$$getFont$$$(null, -1, 12, txUri.getFont());
        if (txUriFont != null) txUri.setFont(txUriFont);
        txUri.setText("ws://localhost:8888/kurento");
        txData.add(txUri, new GridConstraints(0, 1, 1, 4, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        final JLabel label2 = new JLabel();
        Font label2Font = this.$$$getFont$$$(null, Font.BOLD, 12, label2.getFont());
        if (label2Font != null) label2.setFont(label2Font);
        label2.setText("Data:");
        txData.add(label2, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        txData2 = new JTextField();
        Font txData2Font = this.$$$getFont$$$(null, -1, 12, txData2.getFont());
        if (txData2Font != null) txData2.setFont(txData2Font);
        txData.add(txData2, new GridConstraints(1, 1, 1, 4, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        btnInit = new JButton();
        Font btnInitFont = this.$$$getFont$$$(null, Font.BOLD, 12, btnInit.getFont());
        if (btnInitFont != null) btnInit.setFont(btnInitFont);
        btnInit.setText("Init");
        txData.add(btnInit, new GridConstraints(2, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        btnConnect = new JButton();
        Font btnConnectFont = this.$$$getFont$$$(null, Font.BOLD, 12, btnConnect.getFont());
        if (btnConnectFont != null) btnConnect.setFont(btnConnectFont);
        btnConnect.setText("Connect");
        txData.add(btnConnect, new GridConstraints(2, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        btnDisconnect = new JButton();
        Font btnDisconnectFont = this.$$$getFont$$$(null, Font.BOLD, 12, btnDisconnect.getFont());
        if (btnDisconnectFont != null) btnDisconnect.setFont(btnDisconnectFont);
        btnDisconnect.setText("Disconnect");
        txData.add(btnDisconnect, new GridConstraints(2, 4, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        btnSendData = new JButton();
        Font btnSendDataFont = this.$$$getFont$$$(null, Font.BOLD, 12, btnSendData.getFont());
        if (btnSendDataFont != null) btnSendData.setFont(btnSendDataFont);
        btnSendData.setText("Send Data");
        txData.add(btnSendData, new GridConstraints(2, 3, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JScrollPane scrollPane1 = new JScrollPane();
        txData.add(scrollPane1, new GridConstraints(4, 1, 1, 4, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        lbLog = new JList();
        Font lbLogFont = this.$$$getFont$$$("Courier New", -1, 14, lbLog.getFont());
        if (lbLogFont != null) lbLog.setFont(lbLogFont);
        scrollPane1.setViewportView(lbLog);
        btnClearLog = new JButton();
        Font btnClearLogFont = this.$$$getFont$$$(null, Font.BOLD, 12, btnClearLog.getFont());
        if (btnClearLogFont != null) btnClearLog.setFont(btnClearLogFont);
        btnClearLog.setText("Clear");
        txData.add(btnClearLog, new GridConstraints(3, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        btnRefreshLog = new JButton();
        Font btnRefreshLogFont = this.$$$getFont$$$(null, Font.BOLD, 12, btnRefreshLog.getFont());
        if (btnRefreshLogFont != null) btnRefreshLog.setFont(btnRefreshLogFont);
        btnRefreshLog.setText("Refresh");
        txData.add(btnRefreshLog, new GridConstraints(3, 4, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        return new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return mainPanel;
    }

}
